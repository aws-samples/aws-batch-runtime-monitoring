{
  "Comment": "Job States Handler",
  "StartAt": "Get Common Fields",
  "States": {
    "Get Common Fields": {
      "Type": "Pass",
      "Next": "Check Job State",
      "Parameters": {
        "JobId.$": "$.detail.jobId",
        "Region.$": "$.region",
        "JobQueue.$": "$.detail.jobQueue",
        "JobName.$": "$.detail.jobName",
        "JobDefinition.$": "$.detail.jobDefinition",
        "LastEventType.$": "$.detail.status",
        "LastEventTime.$": "$.time"
      }
    },
    "Check Job State": {
      "Type": "Choice",
      "Choices": [
        {
          "Or": [
            {
              "Variable": "$.LastEventType",
              "StringEquals": "SUCCEEDED"
            },
            {
              "Variable": "$.LastEventType",
              "StringEquals": "FAILED"
            },
            {
              "Variable": "$.LastEventType",
              "StringEquals": "RUNNING"
            },
            {
              "Variable": "$.LastEventType",
              "StringEquals": "STARTING"
            }
          ],
          "Next": "Contain Array Properties?"
        }
      ],
      "Default": "SQS SendMessage Job State Not Associated"
    },
    "Contain Array Properties?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$$.Execution.Input.detail.arrayProperties",
          "IsPresent": true,
          "Next": "Get Array Properties"
        }
      ],
      "Default": "Get Job State for Instance Association"
    },
    "Get Array Properties": {
      "Type": "Pass",
      "Next": "Is Parent Job?",
      "InputPath": "$$.Execution.Input.detail.arrayProperties",
      "ResultPath": "$.ArrayProperties"
    },
    "Is Parent Job?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.ArrayProperties.size",
          "IsPresent": true,
          "Next": "Skip Event"
        }
      ],
      "Default": "Get Job State for Instance Association"
    },
    "Get Job State for Instance Association": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$$.Execution.Input.detail.container.containerInstanceArn",
          "IsPresent": true,
          "Next": "Get ContainerInstanceId from containerInstanceArn"
        }
      ],
      "Default": "Is Attempted?"
    },
    "Is Attempted?": {
      "Type": "Choice",
      "InputPath": "$$.Execution.Input.detail.attempts[-1]",
      "Choices": [
        {
          "Variable": "$",
          "IsPresent": true,
          "Next": "Get Job State for Instance Association Array"
        }
      ],
      "Default": "Skip Event"
    },
    "Get Job State for Instance Association Array": {
      "Type": "Choice",
      "InputPath": "$$.Execution.Input.detail.attempts[-1]",
      "Choices": [
        {
          "Variable": "$.container.containerInstanceArn",
          "IsPresent": true,
          "Next": "Get ContainerInstanceId from attempts[-1].container.containerInstanceArn"
        }
      ],
      "Default": "Skip Event"
    },
    "Get ContainerInstanceId from containerInstanceArn": {
      "Type": "Pass",
      "Next": "DynamoDB GetItem EC2 InstanceId from ContainerInstanceId",
      "InputPath": "$$.Execution.Input.detail.container.containerInstanceArn",
      "ResultPath": "$.containerInstanceArn"
    },
    "Get ContainerInstanceId from attempts[-1].container.containerInstanceArn": {
      "Type": "Pass",
      "Next": "DynamoDB GetItem EC2 InstanceId from ContainerInstanceId",
      "InputPath": "$$.Execution.Input.detail.attempts[-1].container.containerInstanceArn",
      "ResultPath": "$.containerInstanceArn"
    },
    "DynamoDB GetItem EC2 InstanceId from ContainerInstanceId": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:getItem",
      "Parameters": {
        "TableName": "${ECSRegistrationTable}",
        "Key": {
          "ContainerInstanceId": {
            "S.$": "$.containerInstanceArn"
          }
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "BackoffRate": 2,
          "MaxAttempts": 5
        }
      ],
      "ResultPath": "$.ECSInstance",
      "Next": "Check Association ContainerInstanceId to ECS Container Instance"
    },
    "Check Association ContainerInstanceId to ECS Container Instance": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.ECSInstance.Item",
          "IsPresent": true,
          "Next": "SQS SendMessage Job State Associated"
        }
      ],
      "Default": "Wait for new request on ECS Registration table"
    },
    "Wait for new request on ECS Registration table": {
      "Type": "Wait",
      "Seconds": 3,
      "Next": "DynamoDB GetItem EC2 InstanceId from ContainerInstanceId"
    },
    "SQS SendMessage Job State Associated": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "QueueUrl": "${SQSMetricsQueue}",
        "MessageBody": {
          "Dimensions": {
            "JobQueue.$": "$.JobQueue",
            "JobState.$": "$.LastEventType",
            "AvailabilityZone.$": "$.ECSInstance.Item.AvailabilityZone.S",
            "ECSCluster.$": "$.ECSInstance.Item.ECSCluster.S",
            "InstanceType.$": "$.ECSInstance.Item.InstanceType.S",
            "JobDefinition.$": "$.JobDefinition"
          },
          "Properties": {
            "JobId.$": "$.JobId",
            "JobQueue.$": "$.JobQueue",
            "JobState.$": "$.LastEventType",
            "AvailabilityZone.$": "$.ECSInstance.Item.AvailabilityZone.S",
            "ECSCluster.$": "$.ECSInstance.Item.ECSCluster.S",
            "InstanceType.$": "$.ECSInstance.Item.InstanceType.S",
            "InstanceId.$": "$.ECSInstance.Item.InstanceId.S",
            "JobName.$": "$.JobName",
            "JobDefinition.$": "$.JobDefinition"
          },
          "MetricName.$": "$.LastEventType",
          "MetricTime.$": "$.LastEventTime"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "BackoffRate": 2,
          "MaxAttempts": 10
        }
      ],
      "Next": "Is job complete?",
      "ResultPath": null
    },
    "SQS SendMessage Job State Not Associated": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "QueueUrl": "${SQSMetricsQueue}",
        "MessageBody": {
          "Dimensions": {
            "JobQueue.$": "$.JobQueue",
            "JobState.$": "$.LastEventType",
            "JobDefinition.$": "$.JobDefinition"
          },
          "Properties": {
            "JobId.$": "$.JobId",
            "JobQueue.$": "$.JobQueue",
            "JobState.$": "$.LastEventType",
            "JobName.$": "$.JobName",
            "JobDefinition.$": "$.JobDefinition"
          },
          "MetricName.$": "$.LastEventType",
          "MetricTime.$": "$.LastEventTime"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "BackoffRate": 2,
          "MaxAttempts": 10
        }
      ],
      "Next": "Is job complete?",
      "ResultPath": null
    },
    "Is job complete?": {
      "Type": "Choice",
      "Choices": [
        {
          "Or": [
            {
              "Variable": "$.LastEventType",
              "StringEquals": "SUCCEEDED"
            },
            {
              "Variable": "$.LastEventType",
              "StringEquals": "FAILED"
            }
          ],
          "Next": "SQS SendMessage Job Summary Statistics"
        }
      ],
      "Default": "Skip Event"
    },
    "SQS SendMessage Job Summary Statistics": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "QueueUrl": "${SQSSummaryQueue}",
        "MessageBody": {
          "Dimensions": {
            "JobQueue.$": "$.JobQueue",
            "JobState.$": "$.LastEventType",
            "AvailabilityZone.$": "$.ECSInstance.Item.AvailabilityZone.S",
            "ECSCluster.$": "$.ECSInstance.Item.ECSCluster.S",
            "InstanceType.$": "$.ECSInstance.Item.InstanceType.S",
            "JobDefinition.$": "$.JobDefinition"
          },
          "Properties": {
            "JobId.$": "$.JobId",
            "JobQueue.$": "$.JobQueue",
            "JobState.$": "$.LastEventType",
            "AvailabilityZone.$": "$.ECSInstance.Item.AvailabilityZone.S",
            "ECSCluster.$": "$.ECSInstance.Item.ECSCluster.S",
            "InstanceType.$": "$.ECSInstance.Item.InstanceType.S",
            "InstanceId.$": "$.ECSInstance.Item.InstanceId.S",
            "JobName.$": "$.JobName",
            "JobDefinition.$": "$.JobDefinition"
          },
          "detail.$": "$$.Execution.Input.detail"
        }
      },
      "End": true
    },
    "Skip Event": {
      "Type": "Pass",
      "End": true
    }
  }
}